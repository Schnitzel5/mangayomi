import 'dart:async';
import 'dart:isolate';
import 'package:flutter/foundation.dart';
import 'package:mangayomi/modules/manga/reader/u_chap_data_preload.dart';
import 'package:mangayomi/src/rust/api/colorizer/main.dart';
import 'package:mangayomi/src/rust/api/colorizer/types.dart';
import 'package:mangayomi/src/rust/frb_generated.dart';
import 'package:mangayomi/utils/extensions/others.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
part 'colorize_image_provider.g.dart';

@Riverpod(keepAlive: true)
Future<Uint8List?> processColorizeImage(
  Ref ref, {
  required UChapDataPreload data,
  required bool colorize,
}) async {
  Uint8List? imageBytes;

  if (colorize) {
    imageBytes = await data.getImageBytes;

    if (imageBytes == null) {
      return null;
    }

    return await Isolate.run(() async {
      await RustLib.init();
      final colors = await loadColorscheme(colors: ColorScheme.catppuccinFrappe.colors);
      final imageRes = await colorizeImage(
        image: imageBytes!,
        config: AppConfig(
          blendFactor: 0.9,
          colors: colors,
          ditherAmount: 0.10,
          spatialAveragingRadius: 10,
        ),
      );
      RustLib.dispose();
      return imageRes;
    });
  }
  return null;
}

enum ColorScheme {
  catppuccinFrappe([
    "#f2d5cf",
    "#eebebe",
    "#f4b8e4",
    "#ca9ee6",
    "#e78284",
    "#ea999c",
    "#ef9f76",
    "#e5c890",
    "#a6d189",
    "#81c8be",
    "#99d1db",
    "#85c1dc",
    "#8caaee",
    "#babbf1",
    "#c6d0f5",
    "#b5bfe2",
    "#a5adce",
    "#949cbb",
    "#838ba7",
    "#737994",
    "#626880",
    "#51576d",
    "#414559",
    "#303446",
    "#292c3c",
    "#232634",
  ]),
  catppuccinLatte([
    "#dc8a78",
    "#dd7878",
    "#ea76cb",
    "#8839ef",
    "#d20f39",
    "#e64553",
    "#fe640b",
    "#df8e1d",
    "#40a02b",
    "#179299",
    "#04a5e5",
    "#209fb5",
    "#1e66f5",
    "#7287fd",
    "#4c4f69",
    "#5c5f77",
    "#6c6f85",
    "#7c7f93",
    "#8c8fa1",
    "#9ca0b0",
    "#acb0be",
    "#bcc0cc",
    "#ccd0da",
    "#eff1f5",
    "#e6e9ef",
    "#dce0e8",
  ]),
  catppuccinMacchiato([
    "#f4dbd6",
    "#f0c6c6",
    "#f5bde6",
    "#c6a0f6",
    "#ed8796",
    "#ee99a0",
    "#f5a97f",
    "#eed49f",
    "#a6da95",
    "#8bd5ca",
    "#91d7e3",
    "#7dc4e4",
    "#8aadf4",
    "#b7bdf8",
    "#cad3f5",
    "#b8c0e0",
    "#a5adcb",
    "#939ab7",
    "#8087a2",
    "#6e738d",
    "#5b6078",
    "#494d64",
    "#363a4f",
    "#24273a",
    "#1e2030",
    "#181926",
  ]),
  catppuccinMocha([
    "#f5e0dc",
    "#f2cdcd",
    "#f5c2e7",
    "#cba6f7",
    "#f38ba8",
    "#eba0ac",
    "#fab387",
    "#f9e2af",
    "#a6e3a1",
    "#94e2d5",
    "#89dceb",
    "#74c7ec",
    "#89b4fa",
    "#b4befe",
    "#cdd6f4",
    "#bac2de",
    "#a6adc8",
    "#9399b2",
    "#7f849c",
    "#6c7086",
    "#585b70",
    "#45475a",
    "#313244",
    "#1e1e2e",
    "#181825",
    "#11111b",
  ]),
  grayscale(["#fff", "#000"]),
  kanagawa([
    "#16161D",
    "#181820",
    "#1a1a22",
    "#1F1F28",
    "#2A2A37",
    "#363646",
    "#54546D",
    "#223249",
    "#2D4F67",
    "#2B3328",
    "#49443C",
    "#43242B",
    "#252535",
    "#76946A",
    "#C34043",
    "#DCA561",
    "#E82424",
    "#FF9E3B",
    "#6A9589",
    "#658594",
    "#C8C093",
    "#DCD7BA",
    "#727169",
    "#957FB8",
    "#b8b4d0",
    "#7E9CD8",
    "#938AA9",
    "#9CABCA",
    "#7FB4CA",
    "#A3D4D5",
    "#7AA89F",
    "#98BB6C",
    "#938056",
    "#C0A36E",
    "#E6C384",
    "#D27E99",
    "#E46876",
    "#FF5D62",
    "#FFA066",
    "#717C7C",
    "#0d0c0c",
    "#12120f",
    "#1D1C19",
    "#181616",
    "#282727",
    "#393836",
    "#625e5a",
    "#c5c9c5",
    "#87a987",
    "#8a9a7b",
    "#a292a3",
    "#b6927b",
    "#b98d7b",
    "#a6a69c",
    "#9e9b93",
    "#7a8382",
    "#8ba4b0",
    "#8992a7",
    "#c4746e",
    "#8ea4a2",
    "#737c73",
    "#949fb5",
    "#c4b28a",
    "#545464",
    "#43436c",
    "#dcd7ba",
    "#716e61",
    "#8a8980",
    "#d5cea3",
    "#dcd5ac",
    "#e5ddb0",
    "#f2ecbc",
    "#e7dba0",
    "#e4d794",
    "#a09cac",
    "#766b90",
    "#c9cbd1",
    "#624c83",
    "#c7d7e0",
    "#b5cbd2",
    "#9fb5c9",
    "#4d699b",
    "#5d57a3",
    "#6f894e",
    "#6e915f",
    "#b7d0ae",
    "#b35b79",
    "#cc6d00",
    "#e98a00",
    "#77713f",
    "#836f4a",
    "#de9800",
    "#f9d791",
    "#c84053",
    "#d7474b",
    "#e82424",
    "#d9a594",
    "#597b75",
    "#5e857a",
    "#4e8ca2",
    "#6693bf",
    "#5a7785",
    "#d7e3d8",
  ]),
  nord([
    "#2e3440",
    "#3b4252",
    "#434c5e",
    "#4c566a",
    "#d8dee9",
    "#e5e9f0",
    "#eceff4",
    "#8fbcbb",
    "#88c0d0",
    "#81a1c1",
    "#5e81ac",
    "#bf616a",
    "#d08770",
    "#ebcb8b",
    "#a3be8c",
    "#b48ead",
  ]),
  tomorrowNight([
    "#1d1f21",
    "#282a2e",
    "#373b41",
    "#c5c8c6",
    "#969896",
    "#cc6666",
    "#de935f",
    "#f0c674",
    "#b5bd68",
    "#8abeb7",
    "#81a2be",
    "#b294bb",
  ]);

  final List<String> colors;

  const ColorScheme(this.colors);
}
